---
- name: ensure recent package list
  apt: update_cache=yes
  sudo: yes

# TypeSafe Activator

- name: install unzip
  apt: name=unzip state=present
  sudo: yes

- name: TypeSafe Activator | Download 
  get_url: url=http://downloads.typesafe.com/typesafe-activator/{{ scala_activator_version }}/typesafe-activator-{{ scala_activator_version }}.zip dest=/root/activator.zip mode=0440
  sudo: yes

- name: TypeSafe Activator | Extract 
  shell: unzip /root/activator.zip -d /root
  sudo: yes
  
- name: TypeSafe Activator | Install 
  shell: cp /root/activator-{{ scala_activator_version }}/activator* /usr/local/bin
  sudo: yes

- name: TypeSafe Activator | Set Binary Permissions
  file: path=/usr/local/bin/activator mode=0755
  sudo: yes

# Java

- name: add Java PPA
  apt_repository: repo=ppa:webupd8team/java state=present
  sudo: yes

- name: check if Java license is accepted
  shell: '/usr/bin/debconf-get-selections | grep oracle-java7-installer'
  sudo: yes
  register: java_license_check
  changed_when: java_license_check.rc != 0
  failed_when: java_license_check.rc > 1

- name: automatically accept Java license
  shell: 'echo oracle-java7-installer shared/accepted-oracle-license-v1-1 select true | /usr/bin/debconf-set-selections'
  sudo: yes
  when: java_license_check.rc != 0

- name: install Java 7
  apt: pkg='{{ item }}' state=present update_cache=yes force=yes
  with_items:
    - oracle-java7-installer
    - oracle-java7-set-default
    - jython
  sudo: yes

- name: fix /etc/hosts
  lineinfile: dest=/etc/hosts
              regexp='^127\.0\.1\.1\s+(.*)$'
              line='127.0.0.1 \1'
              backrefs=yes
              state=present
  sudo: yes

- name: create base data directory
  file: path=/data state=directory owner=vagrant group=vagrant mode=0755
  sudo: yes

- name: create SSH config
  template: src=ssh-config.j2 dest=/home/vagrant/.ssh/config

- name: create SSH key pair for Hadoop
  command: ssh-keygen -t rsa -N "" -C "for Hadoop" -f '{{ ssh_key }}'
           creates='{{ ssh_key }}.pub'

- name: add generated key to authorized_keys
  shell: 'if grep -q Hadoop /home/vagrant/.ssh/authorized_keys; then echo "public key already added"; else cat {{ ssh_key }}.pub >> /home/vagrant/.ssh/authorized_keys; fi'
  register: ssh_result
  changed_when: ssh_result.stdout.find('public key already added') == -1
